{%- liquid
  assign page_width = section.settings.page_width
  assign section_background = section.settings.section_background
  assign section_top_padding = section.settings.top_padding
  assign section_bottom_padding = section.settings.bottom_padding
-%}

{{ 'collection-carousel.css' | asset_url | stylesheet_tag }}

{% style %}
.section-collection-carousel-container {
  background-color: {{ section_background }};
  padding-top: {{ section_top_padding }}px;
  padding-bottom: {{ section_bottom_padding }}px;
  width: 100%;
}
.section-collection-carousel-container .collection-carousel-wrapper .collection-carousel__title h2 {
  color: {{ section.settings.title_color }};
}
.section-collection-carousel-container .collection-carousel-wrapper .collection-carousel__description {
  color: {{ section.settings.description_color }};
}
@media (min-width: 1501px) {
  .swiper-button-next {
    {% if page_width %}
      right: calc(50% - 750px);
    {% endif %}
  }
  .swiper-button-prev {
    {% if page_width %}
      left: calc(50% - 750px);
    {% endif %}
  }
}
{% endstyle %}
<div class=" section-collection-carousel-container">
  <div class="collection-carousel-wrapper collection-carousel-wrapper-{{ section.id }} {% if page_width %}page-container{% endif %}">
    <div class="collection-carousel__title">
      <h2 class="heading-style heading-base full_shadow">{{ section.settings.title }}</h2>
    </div>
    <div class="collection-carousel__description">
      {{ section.settings.description }}
    </div>
    
    {% if section.settings.use_custom_collection %}
      {% assign collection = collections[section.settings.collection] %}
      {% assign products = collection.products %}
    {% else %}
      {% assign products = section.settings.products %}
    {% endif %}

    {% if products != blank %}
      <div class="collection-carousel__products-container collection-carousel__products-container-{{ section.id }} overflow-hidden hidden">
        <div class="swiper-wrapper ">
          {% for product in products %}
            {% assign current_variant = product.selected_or_first_available_variant %}
            {% assign products_length = forloop.index %}
            <div class="swiper-slide">
              <a href="{{ product.url }}">
                <img src="{{ product.featured_image | img_url: 'master' }}" alt="{{ product.title }}">
                <h3>
                  {{ product.title 
                    | remove: " - All-in-One Shake"
                    | remove: ' - Shake tout-en-un' 
                    | remove: 'Green Superfood Juice - ' 
                    | remove: 'Jus de superaliments verts - '
                    | remove: ' - Green Apple'
                    | remove: ' - Pomme verte'
                    | remove: '- Boisson tout-en-un'
                  }}
                </h3>
                <div class="junip-product-summary-stars" data-junip-product-id="ENTER PRODUCT ID"></div>
              </a>

              {%- liquid
                  assign price = current_variant.price
                  assign compare_at_price = current_variant.compare_at_price

                  if compare_at_price > price
                    assign on_sale = true
                  else
                    assign on_sale = false
                  endif

                  assign money_price = price | money
                  if settings.currency_code_enabled
                    assign money_price = price | money_with_currency
                  endif
              -%}
              <div class="price
                {%- if compare_at_price > price %} price--on-sale {% endif -%}
                {%- if product.price_varies == false and product.compare_at_price_varies %} price--no-compare{% endif -%}
                "
                id="product-price-{{ product.id }}"
              >
                <div class="price__container">
              
                  {%- comment -%}
                    Explanation of description list:
                      - div.price__regular: Displayed when there are no variants on sale
                      - div.price__sale: Displayed when a variant is a sale
                  {%- endcomment -%}
                  <div class="price__regular {% if on_sale %}hidden{% endif %} text-center">
                    <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
                    <span class="price-item price-item--regular">
                      {{ money_price }}
                    </span>
                  </div>
                  <div class="price__sale {% unless on_sale %}hidden{% endunless %}">
                    {%- unless product.price_varies == false and product.compare_at_price_varies %}
                      <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
                      <span>
                        <s class="price-item price-item--regular">
                          {% if settings.currency_code_enabled %}
                            {{ compare_at_price | money_with_currency }}
                          {% else %}
                            {{ compare_at_price | money }}
                          {% endif %}
                        </s>
                      </span>
                    {%- endunless -%}
                    <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.sale_price' | t }}</span>
                    <span class="price-item price-item--sale price-item--last">
                      {{ money_price }}
                    </span>
                  </div>
                  <small class="unit-price caption{% if product.selected_or_first_available_variant.unit_price_measurement == nil %} hidden{% endif %}">
                    <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
                    <span class="price-item price-item--last">
                      <span>{{- product.selected_or_first_available_variant.unit_price | money -}}</span>
                      <span aria-hidden="true">/</span>
                      <span class="visually-hidden">&nbsp;{{ 'general.accessibility.unit_price_separator' | t }}&nbsp;</span>
                      <span>
                        {%- if product.selected_or_first_available_variant.unit_price_measurement.reference_value != 1 -%}
                          {{- product.selected_or_first_available_variant.unit_price_measurement.reference_value -}}
                        {%- endif -%}
                        {{ product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
                      </span>
                    </span>
                  </small>
                </div>
              </div>

              {% unless product.has_only_default_variant %}
                {% if product.variants.size > 0 %}
                  <div class="product-sizes mt-2 padding-1rem-saturn">
                    <select class="size-selector {% if product.variants.size == 1 %} _hide_arrow {% endif %}" data-product-id="{{ product.id }}"  {% if product.variants.size == 1 %} disabled {% endif %}>
                      {% for variant in product.variants %}
                        {% if variant.available %}
                          <div style="display: none"></div>
                          <option value="{{ variant.id }}" data-price="{{ variant.price }}">{{ variant.title }}</option>
                        {% endif %}
                      {% endfor %}
                    </select>
                  </div>
                {% endif %}
              {% endunless %}
              <button id="quick-buy-btn-{{ product.id }}" class=" btn quick-buy-btn" data-product-id="{{ product.id }}" data-variant-id="{{ current_variant.id }}">
                Add
              </button>
            </div>
          {% endfor %}
        </div>

        <div class="icons-to-choose-description-swiper-pagination"></div>
        <button class="video-text-btn-prev-{{ section.id }} swiper-button-prev">
          <img src="https://cdn.shopify.com/s/files/1/0012/5573/5405/files/arrow-left-in-circle.png?v=1741981965" />
        </button>
        <button class="video-text-btn-next-{{ section.id }} swiper-button-next">
          <img src="https://cdn.shopify.com/s/files/1/0012/5573/5405/files/arrow-right-in-circle.png?v=1741981965" />
        </button>
      </div>
    {% else %}
      <div class="no-products-description">No products</div>
    {% endif %}
    {% style %}
      .collection-carousel-wrapper-{{ section.id }} {
        {% if products_length < section.settings.items_per_page_1024 %}
          max-width: {% if page_width %} {{ products_length | times: 1500 | divided_by: section.settings.items_per_page_1024 }}px {% else %}{{ products_length | times: 100 | divided_by: section.settings.items_per_page_1024 }}% {% endif %};
        {% endif %}
      }
    {% endstyle %}
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelector(".collection-carousel__products-container-{{ section.id }}").classList.remove("hidden");
    const collectionCarouselProductsContainer = new Swiper('.collection-carousel__products-container-{{ section.id }}', {
      pagination: {
        el: ".icons-to-choose-description-swiper-pagination",
        type: "bullets",
        clickable: true,
        dynamicBullets: false
      },
      navigation: {
        nextEl: '.video-text-btn-next-{{ section.id }}',
        prevEl: '.video-text-btn-prev-{{ section.id }}'
      },
      breakpoints: {
        1024: {
          slidesPerView: {% if products_length < section.settings.items_per_page_1024 %} products_length {% else %} {{ section.settings.items_per_page_1024 }} {% endif %},
          spaceBetween: 0,
        },
        768: {
          slidesPerView: {% if products_length < section.settings.items_per_page_768 %} products_length {% else %} {{ section.settings.items_per_page_768 }} {% endif %},
          spaceBetween: 0,
        },
        0: {
          slidesPerView: {% if products_length < section.settings.items_per_page_480 %} products_length {% else %} {{ section.settings.items_per_page_480 }} {% endif %},
          spaceBetween: 0,
        },
      }
    });

    // Quick Buy button functionality
    document.querySelectorAll(".quick-buy-btn").forEach(function(button) {
      button.addEventListener("click", function(event) {
        const variantId = event.target.getAttribute("data-variant-id");

        // Example function to handle adding to cart
        addToCart(variantId);
      });
    });

    // Function to handle adding a product variant to the cart
    function addToCart(variantId) {
      fetch('/cart/add.js', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id: variantId, quantity: 1 })
      })
      .then(response => response.json())
      .then(data => {
        // Optionally, handle success (like updating cart UI)
      //  alert("Product added to cart!");
      })
      .catch(error => {
        console.error("Error adding to cart:", error);
      });
    }
    
    document.querySelectorAll(".size-selector").forEach(function(selector) {
      selector.addEventListener("change", function(event) {
        const selectedVariantId = event.target.value;
        const productId = event.target.getAttribute("data-product-id");

        [ ...document.querySelectorAll(`#quick-buy-btn-${productId}`) ].forEach(quickBuyButton => {
          if (quickBuyButton) {
            quickBuyButton.setAttribute("data-variant-id", selectedVariantId);
          }
    
          // Update the product variant id
          const productTile = document.querySelector(`#product-tile-${productId}`);
          if (productTile) {
            productTile.setAttribute("data-variant-id", selectedVariantId);
          }
          
          // Update the price display with the selected variant's price
          const selectedOption = event.target.options[event.target.selectedIndex];
          const variantPrice = selectedOption.getAttribute("data-price");
          const priceContainer = document.querySelector(`#product-price-${productId} .price-item--regular`);
          if (priceContainer) {
            priceContainer.innerHTML = formatPrice(variantPrice);
          }
        });
        window.dispatchEvent(new CustomEvent('abra:render'))      
      });
    });

    // Function to format the price as currency (assuming Shopify's default currency format)
    function formatPrice(price) {
      const formattedPrice = (price / 100).toFixed(2); // Adjust for Shopify's cents-based prices
      return `$${formattedPrice}`; // Add currency symbol as needed
    }
  });
</script>

{% schema %}
{
  "name": "Collection Carousel",
  "class": "collection-carousel",
  "settings": [
    {
      "type": "header",
      "content": "Content settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Choose products"
    },
    {
      "type": "checkbox",
      "id": "use_custom_collection",
      "label": "Using Collection",
      "default": true
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products"
    },
    {
      "type": "header",
      "content": "Design settings"
    },
    {
      "id": "top_padding",
      "type": "range",
      "label": "Section Top Padding",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "id": "bottom_padding",
      "type": "range",
      "label": "Section Bottom Padding",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "color",
      "id": "section_background",
      "label": "Section background",
      "default": "#ffffff"
    },
    {
      "type": "checkbox",
      "id": "page_width",
      "label": "Page max-width",
      "default": true
    },
    {
      "type": "range",
      "id": "items_per_page_1024",
      "label": "Items per page (Desktop)",
      "min": 1,
      "max": 10,
      "default": 5
    },
    {
      "type": "range",
      "id": "items_per_page_768",
      "label": "Items per page (Tablet)",
      "min": 1,
      "max": 7,
      "default": 3
    },
    {
      "type": "range",
      "id": "items_per_page_480",
      "label": "Items per page (Mobile)",
      "min": 1,
      "max": 5,
      "default": 2
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots",
      "default": true
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Collection Carousel"
    }
  ]
}
{% endschema %}